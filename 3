'''
Задача 16:
Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N].
Пользователь вводит натуральное число N – количество элементов в массиве и число, которое необходимо проверить - X.
Заполните массив случайными натуральными числами от 1 до N/2.
Выведите, сколько раз X встречается в массиве.

Ввод: 5
Ввод: 1

1 2 1 2 2
Вывод: 2

'''

print('Ответ на задачу 16')

def gen_array():

    import random

    while True:
        try:
            n = int(input(f'Введите натуральное число N - количество элементов в массиве: '))
            if n < 0:
                print(f'Вы ввели число: {n}, которое меньше 0. Количество элементов должно быть положительным числом.')
                continue
            if n == 0:
                print(f'Вы ввели число {n}. В массиве должно быть положительное количество элементов.')
            else:
                array_1 = []

                for item in range(0, n):
                    array_1.append(round(random.randint(0, 1000)))
                break
        except:
            print(f'Вы ввели не число. ')

    return array_1


def find_num(arr):
    len_arr = len(arr)
    sum = 0
    index = 0
    array_index = []
    while True:
        try:
            x = int(input(f'Введите число X, нахождение которого в массиве необходимо проверить: '))
            print(f'Сгенерирован массив: {arr}.')
            break
        except:
            print(f'Вы ввели не число. ')

    for item in arr:
        index = index + 1
        if item == x:
            sum = sum + 1
            array_index.append(index)
    print(f'В сгенерированном массиве число {x} встречается {sum} раз.')


find_num(gen_array())

print('*' * 25)

'''
Задача 18:
Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X.
Пользователь вводит натуральное число N – количество элементов в массиве и число, 
которое необходимо проверить - X.
Заполните массив случайными натуральными числами от 1 до N.
Выведите, ближайший к X элемент. Если есть несколько элементов, 
которые равноудалены от X, выведите наименьший по величине.

Ввод: 10
Ввод: 7
1 2 1 8 9 6 5 4 3 4
Вывод: 6
'''
print('Ответ на задачу 18')

def gen_array():

    import random

    while True:
        try:
            n = int(input(f'Введите натуральное число N - количество элементов в массиве: '))
            if n < 0:
                print(f'Вы ввели число: {n}, которое меньше 0. Количество элементов должно быть положительным числом.')
                continue
            if n == 0:
                print(f'Вы ввели число {n}. В массиве должно быть положительное количество элементов.')
            else:
                array_1 = []

                for item in range(0, n):
                    array_1.append(round(random.randint(0, 1000)))
                break
        except:
            print(f'Вы ввели не число. ')

    return array_1


def find_num(arr):
    low = 0
    hight = 0
    low_min = arr[0]
    hight_max = arr[0]

    while True:
        try:
            x = int(input(f'Введите число X, нахождение которого в массиве необходимо проверить: '))
            print(f'Сгенерирован массив: {arr}.')
            print(f'Массив отсортирован для проверки: {sorted(arr)}.')

            for item in arr:
                if low_min > item:
                    low_min = item
                elif hight_max < item:
                    hight_max = item

            print('Минимальное число в массиве:', low_min)
            print('Максимальное число в массиве:', hight_max)
            print('Загаданное число X =', x)

            for item in arr:
                if item < x and item > low:
                    low = item
                if item > x and item > hight:
                    hight = item

            for item in arr:
                if item > x and item < hight:
                    hight = item

            if x == low_min or x == hight_max:
                print(f'Ответ: В сгенерированном массиве есть загаданное число {x}, оно же является ответом на вопрос.')
            elif x < low_min:
                print('Ответ: Ближайшее большее по значению число =', low_min)
            elif x > hight_max:
                print('Ответ: Ближайшее меньшее по значинию число =', hight_max)
            elif x - low < hight - x or x - low == hight - x:
                print('Ответ: Ближайшее меньшее по значинию число =', low)
            elif x > hight_max:
                print('Ответ: Ближайшее меньшее по значинию число =', hight_max)
            elif x - low > hight - x:
                print('Ближайшее большее по значению число =', hight)
            break
        except:
            print(f'Вы ввели не число. ')
        break


find_num(gen_array())

print('*' * 25)

'''
Задача 20:
В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
В случае с английским алфавитом очки распределяются так:
A, E, I, O, U, L, N, S, T, R – 1 очко;
D, G – 2 очка;
B, C, M, P – 3 очка;
F, H, V, W, Y – 4 очка;
K – 5 очков;
J, X – 8 очков;
Q, Z – 10 очков.

А русские буквы оцениваются так:
А, В, Е, И, Н, О, Р, С, Т – 1 очко;
Д, К, Л, М, П, У – 2 очка;
Б, Г, Ё, Ь, Я – 3 очка;
Й, Ы – 4 очка;
Ж, З, Х, Ц, Ч – 5 очков;
Ш, Э, Ю – 8 очков;
Ф, Щ, Ъ – 10 очков.

Напишите программу, которая вычисляет стоимость введенного пользователем слова.
Будем считать, что на вход подается только одно слово, которое содержит либо только английские, 
либо только русские буквы.

Ввод: ноутбукprint('Ответ на задачу 16')
Вывод: 12
'''
print('Ответ на задачу 20')

def new_word(word):

    while True:
        if word.isalpha() == True:
            print(f'Вы ввели слово {word}.')
            break
        else:
            print(f'Вы ввели не слово или слово содержащее не буквы.')
            word = input(f'Введите слово еще раз: ')

    return word


def dict_word(gen_word):

    up_word = gen_word.upper()
    dict_letter= {
         1: 'A, E, I, O, U, L, N, S, T, R, А, В, Е, И, Н, О, Р, С, Т',
         2: 'D, G, Д, К, Л, М, П, У',
         3: 'B, C, M, P, Б, Г, Ё, Ь, Я',
         4: 'F, H, V, W, Y, Й, Ы',
         5: 'K, Ж, З, Х, Ц, Ч',
         8: 'J, X, Ш, Э, Ю',
         10: 'Q, Z, Ф, Щ, Ъ'
    }

    sum = 0
    for item in up_word:
        for i in dict_letter:
            if item in dict_letter[i]:
                sum = sum + i
    print('Стоимость введенного Вами слова равна:', sum)


your_word = input('Введите слово: ')
cost = new_word(your_word)
dict_word(cost)
