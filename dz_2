'''
Задача 10
На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом.
Определите минимальное число монеток, которые нужно перевернуть,
чтобы все монетки были повернуты вверх одной и той же стороной.
Выведите минимальное количество монет, которые нужно перевернуть.

5 -> 1 0 1 1 0
2
'''

print()
print('*' * 100)

import random


def cash_gen():
    cash_list = []

    for item in range(0,10):
        cash = round(random.randint(0,1))
        cash_list.append(cash)
    print(f'Монетки на столе: 1 - орёл, 0 - решка.\nМонетки:', cash_list)
    return cash_list


def cach_sum(cash_list):

    sum1 = 0
    sum2 = 0

    for item in cash_list:
        #print(item)
        if item == 1: sum1 += 1
        else: sum2 +=1

    if sum1 > sum2:
        print(f'Минимальное количество монеток, которое необходимо перевернуть, чтобы все монетки лежали орлом вверх: {sum2}')
    elif sum1 < sum2:
        print(f'Минимальное количество монеток, которое необходимо перевернуть, чтобы все монетки лежали решккой вверх: {sum1}')
    else: print(f'Выпало равное количество монеток. Перевернуть необходимо {sum1} монеток решкой или орлом вверх.')


cach_sum(cash_gen())

print('*' * 100)
print()
'''

################################################################################

Задача 12
Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница.
Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y (X,Y≤1000),
а Катя должна их отгадать. Для этого Петя делает две подсказки.
Он называет сумму этих чисел S и их произведение P.
Помогите Кате отгадать задуманные Петей числа.

'''
print('*' * 100)


def num_gen():
    import random
    num = round(random.randint(1, 1000))
    return num


def num_div(x):
    num1_list = []
    num2_list = []
    num3_list = []
    for item in range(1, x + 1):
        if x % item == 0:
            num1_list.append(int(x / item))
            num2_list.append(int(x/(x/item)))
    for i in range(len(num1_list)):
        num3_list.append(num1_list[i] + num2_list[i])
    return x, num1_list, num2_list, num3_list


def func_game(a):
    import random
    z = len(a[1])
    s = list(a)
    #print(s[0]) #Загаданное число
    #print(s[1]) #Список возможных загаданных чисел
    num = round(random.randint(0, z - 1))
    print(f'Загаданны числа Х и У, известно, что (Х * Y) = {(s[0])}, а (Х + Y) = {s[3][num]}, какие числа загаданы?')
    print(f'Ответ: Загаданные числа: X = {s[1][num]}, Y = {s[2][num]}')


func_game(num_div(num_gen()))


print('*' * 100)
print()

'''
################################################################################

Задача 14
Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.
'''
print('*' * 100)

def gen_pow():

    while True:
        try:
            n = int(input(f'Введите целое число N, которое больше 0: '))
            if n < 0:
                print('-' * 25)
                print(f'Вы ввели число: {n}, которое меньше 0.')
                continue
            if n == 0:
                print('-' * 25)
                print(f'Вы ввели число {n}.')
            else:
                print('-' * 25)
                power = 2
                for item in range(0, n):
                    pow_num = power ** item
                    if n >= pow_num:
                        print(f'{power} в {item} степени равно {pow_num}.')
                print(f'Напоминаю, было введено число {n}.')
                break
        except:
            print('-' * 25)
            print(f'Вы ввели не число.')

gen_pow()
